Machine-level Assembler Version 6.3    Thu Oct 11 00:59:41 2018

  LOC    OBJ   SOURCE
hex*dec

0  *0    0045  msg1: dw "Enter the dividend(n) = "
1  *1    006E
2  *2    0074
3  *3    0065
4  *4    0072
5  *5    0020
6  *6    0074
7  *7    0068
8  *8    0065
9  *9    0020
A  *10   0064
B  *11   0069
C  *12   0076
D  *13   0069
E  *14   0064
F  *15   0065
10 *16   006E
11 *17   0064
12 *18   0028
13 *19   006E
14 *20   0029
15 *21   0020
16 *22   003D
17 *23   0020
18 *24   0000
19 *25   0045  msg2: dw "Enter the divisor(m) = "
1A *26   006E
1B *27   0074
1C *28   0065
1D *29   0072
1E *30   0020
1F *31   0074
20 *32   0068
21 *33   0065
22 *34   0020
23 *35   0064
24 *36   0069
25 *37   0076
26 *38   0069
27 *39   0073
28 *40   006F
29 *41   0072
2A *42   0028
2B *43   006D
2C *44   0029
2D *45   0020
2E *46   003D
2F *47   0020
30 *48   0000
31 *49   0000  numb1: dw 0
32 *50   0000  numb2: dw 0
33 *51   0000  count: dw 0
34 *52   0001  one: dw 1
35 *53   0051  msg3: dw "Quotient(q) is "
36 *54   0075
37 *55   006F
38 *56   0074
39 *57   0069
3A *58   0065
3B *59   006E
3C *60   0074
3D *61   0028
3E *62   0071
3F *63   0029
40 *64   0020
41 *65   0069
42 *66   0073
43 *67   0020
44 *68   0000
45 *69   0020  msg4: dw " and the remainder(r) is  "
46 *70   0061
47 *71   006E
48 *72   0064
49 *73   0020
4A *74   0074
4B *75   0068
4C *76   0065
4D *77   0020
4E *78   0072
4F *79   0065
50 *80   006D
51 *81   0061
52 *82   0069
53 *83   006E
54 *84   0064
55 *85   0065
56 *86   0072
57 *87   0028
58 *88   0072
59 *89   0029
5A *90   0020
5B *91   0069
5C *92   0073
5D *93   0020
5E *94   0020
5F *95   0000
60 *96   0077  msg5: dw "wanna check more y/n "
61 *97   0061
62 *98   006E
63 *99   006E
64 *100  0061
65 *101  0020
66 *102  0063
67 *103  0068
68 *104  0065
69 *105  0063
6A *106  006B
6B *107  0020
6C *108  006D
6D *109  006F
6E *110  0072
6F *111  0065
70 *112  0020
71 *113  0079
72 *114  002F
73 *115  006E
74 *116  0020
75 *117  0000
76 *118  0079  yes : dw 'y'
77 *119  0000  zero: dw 0
78 *120  0000  flag: dw 0
               
               
               
79 *121  8000  main: 	ldc msg1
7A *122  FFF7  		sout
7B *123  FFFC  		din
7C *124  F300  		push
7D *125  8019  		ldc msg2
7E *126  FFF7  		sout
7F *127  FFFC  		din
80 *128  F300  		push
               
81 *129  4001  		ldr 1
82 *130  1031  		st numb1
83 *131  C08B  		jz exit
84 *132  B0A5  		jn chang1
               		
85 *133  F400  back:	pop
86 *134  1032  		st numb2
87 *135  B0B2  		jn chang3
               		
88 *136  E0BA  loop:	call loop1
               
89 *137  800A  rtn:	ldc '\n'
8A *138  FFFB  		aout
               		
8B *139  0078  exit:	ld flag
8C *140  3034  		sub one
8D *141  C0AD  		jz chang2
8E *142  8035  back2:	ldc msg3
8F *143  FFF7  		sout
90 *144  0033  		ld count
91 *145  FFFD  		dout
92 *146  8045  		ldc msg4
93 *147  FFF7  		sout
94 *148  0031  		ld numb1
95 *149  FFFD  		dout
96 *150  0077  		ld zero
97 *151  1031  		st numb1
98 *152  1032  		st numb2
99 *153  1033  		st count
9A *154  1078  		st flag
9B *155  4001  		ldr 1
9C *156  F400  		pop
9D *157  800A  		ldc '\n'
9E *158  FFFB  		aout
9F *159  8060  		ldc msg5
A0 *160  FFF7  		sout
A1 *161  FFFA  		ain
A2 *162  3076  		sub yes
A3 *163  C079  		jz main
A4 *164  FFFF  		halt
A5 *165  0031  chang1: ld numb1
A6 *166  3031  		sub numb1
A7 *167  3031  		sub numb1
A8 *168  1031  		st numb1
A9 *169  0078  		ld flag
AA *170  2034  		add one
AB *171  1078  		st flag
AC *172  9085  		ja back
AD *173  0033  chang2: ld count
AE *174  3033  		sub count
AF *175  3033  		sub count
B0 *176  1033  		st count
B1 *177  908E  		ja back2
B2 *178  0032  chang3: ld numb2
B3 *179  3032  		sub numb2
B4 *180  3032  		sub numb2
B5 *181  1032  		st numb2
B6 *182  0078  		ld flag
B7 *183  2034  		add one
B8 *184  1078  		st flag
B9 *185  9088  		ja loop
               		
BA *186  0031  loop1:	ld numb1
BB *187  3032  		sub numb2
BC *188  B08B  		jn exit
BD *189  1031  		st numb1
BE *190  0033  		ld count
BF *191  0033  		ld count
C0 *192  2034  		add one
C1 *193  1033  		st count
C2 *194  90BA  		ja loop1
C3 *195  F000  quit:   ret
C4 *196  ========= end of maximum.mas ============================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 msg1                      0           79 
 msg2                      19          7D 
 numb1                     31          82  94  97  A5  A6 
                                       A7  A8  BA  BD 
 numb2                     32          86  98  B2  B3  B4 
                                       B5  BB 
 count                     33          90  99  AD  AE  AF 
                                       B0  BE  BF  C1 
 one                       34          8C  AA  B7  C0 
 msg3                      35          8E 
 msg4                      45          92 
 msg5                      60          9F 
 yes                       76          A2 
 zero                      77          96 
 flag                      78          8B  9A  A9  AB  B6 
                                       B8 
 main                      79          A3 
 back                      85          AC 
 loop                      88          B9 
 rtn                       89         
 exit                      8B          83  BC 
 back2                     8E          B1 
 chang1                    A5          84 
 chang2                    AD          8D 
 chang3                    B2          87 
 loop1                     BA          88  C2 
 quit                      C3         

Input file   = maximum.mas
Output file  = maximum.mac
List file    = maximum.lst 
Number base  = decimal
Label status = case sensitive
