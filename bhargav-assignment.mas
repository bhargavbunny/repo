

		ldc msg2
		sout
		ldc inbuf
		sin
		sout
		ldc '\n'
		aout
loop1:  ldc inbuf
		add index; address of next character in string1
		ldi
		jz stop; and of string
		st curr
		sub aconst
		jn next ; test if character is a sma11 1etter
		ld curr
		sub zconst
		sub one
		jzop next ; if not a sma11 1etter, process next character
		ld curr ; 1f a sma11 1etter, convert to upper case
		add conv
		st curr
next:   ld curr
		;aout
		ld index
		add one
		st index
		ld curr
		sub Aconst
		;dout
		st value
		ldc count
        add value
        st value
        ldi
        add one
        ;dout
        push
        ld value
        sti
		ja loop1
		
stop:	ldc outputmsg
		sout
		ld alphabet
		aout
		ldc outputmsg1
		sout
		ldc count
		add OutputCounter
		ldi
		st curr1
		dout
		ldc '\n'
		aout
		ld OutputCounter
		add one
		st OutputCounter
		;dout
		ld alphabet
		add one
		st alphabet
		ld counter
		add one
		st counter
		sub max
		jz stop1
		ja stop
stop1:	halt
			
                           ;data area
counter:dw 0
max    :dw 26
curr:   dw 0
curr1:   dw 0
one:    dw 1
OutputCounter: dw 0
conv:   dw -32
index:  dw 0
aconst: dw 'a'
Aconst: dw 'A'
zconst: dw 'z'
yconst: dw 'y'
nconst: dw 'n'
value : dw 0
inbuf:  dw 2096 dup 0
count : dw 26 dup 0 
msgl:   dw "input a string"
msg2:   dw "Input a string of characters."
msg3:   dw "press yes to continue r n to quit"
outputmsg:  dw "The count For  "
outputmsg1:  dw " is =   "
alphabet: dw 65
