start:	ld zero		;resets index before letter checking loop
		st index
		ldc msg3
		sout
		ain
		sub nconst
		jz stop
		ldc msg2
		sout
		ldc inbuf
		sin
		;sout
loop1:  ldc inbuf
		add index; address of next character in string1
		ldi
		jz start; and of string
		st curr
		sub aconst
		jn next ; test if character is a sma11 1etter
		ld curr
		sub zconst
		sub one
		jzop next ; if not a sma11 1etter, process next character
		ld curr ; 1f a sma11 1etter, convert to upper case
		add conv
		st curr
next:   ld curr
		sub Aconst
		;dout
		st value
		ldc count
        add value
        st value
        ldi
        add one
        ;dout
        push
        ld value
        sti
		ld index
		add one
		st index
		ja loop1
		
stop:	ldc outputmsg
		sout
		ldc caps
		add index2
		ldi
		aout
		ldc ':'
		aout
		ldc count
		add index2
		ldi
		dout
		ldc '\n'
		aout
		ld index2
		sub alllet
		jz stop1		;if so, ends program
		ld index2
		add one
		st index2
		ja stop

stop1:	halt
		end start
			
                           ;data area
counter:		dw 0
max    :		dw 26
length :		dw 26
curr:   		dw 0
;curr1:   		dw 0
one:    		dw 1
;OutputCounter: 	dw 0
conv:   		dw -32
index:  		dw 0
index2:  		dw 0
aconst: 		dw 'a'
Aconst: 		dw 'A'
zconst: 		dw 'z'
yconst: 		dw 'y'
nconst: 		dw 'n'
value : 		dw 0
inbuf:  		dw 2000 dup 0
count : 		dw 26 dup 0 
;msgl:   		dw "input a string "
msg2:   		dw "Input a string of characters. "
msg3:   		dw "press y to continue r n to quit "
outputmsg:  	dw "The count For "
;outputmsg1:  	dw " is =   "
;alphabet: 		dw 65
;clearalphabet: 	dw 65
zero :          dw 0
caps:			dw 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
alllet:			dw 25