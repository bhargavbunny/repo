Machine-level Assembler Version 6.3    Thu Oct 11 02:03:01 2018

  LOC    OBJ   SOURCE
hex*dec

0  *0    0896  start:	ld zero		;resets index before letter checking loop
1  *1    1045  		st index
2  *2    8866  		ldc msg3
3  *3    FFF7  		sout
4  *4    FFFA  		ain
5  *5    304B  		sub nconst
6  *6    C028  		jz stop
7  *7    8847  		ldc msg2
8  *8    FFF7  		sout
9  *9    804D  		ldc inbuf
A  *10   FFF6  		sin
               		;sout
B  *11   804D  loop1:  ldc inbuf
C  *12   2045  		add index; address of next character in string1
D  *13   F100  		ldi
E  *14   C000  		jz start; and of string
F  *15   1041  		st curr
10 *16   3047  		sub aconst
11 *17   B019  		jn next ; test if character is a sma11 1etter
12 *18   0041  		ld curr
13 *19   3049  		sub zconst
14 *20   3042  		sub one
15 *21   A019  		jzop next ; if not a sma11 1etter, process next character
16 *22   0041  		ld curr ; 1f a sma11 1etter, convert to upper case
17 *23   2044  		add conv
18 *24   1041  		st curr
19 *25   0041  next:   ld curr
1A *26   3048  		sub Aconst
               		;dout
1B *27   104C  		st value
1C *28   881D  		ldc count
1D *29   204C          add value
1E *30   104C          st value
1F *31   F100          ldi
20 *32   2042          add one
                       ;dout
21 *33   F300          push
22 *34   004C          ld value
23 *35   F200          sti
24 *36   0045  		ld index
25 *37   2042  		add one
26 *38   1045  		st index
27 *39   900B  		ja loop1
               		
28 *40   8887  stop:	ldc outputmsg
29 *41   FFF7  		sout
2A *42   8897  		ldc caps
2B *43   2046  		add index2
2C *44   F100  		ldi
2D *45   FFFB  		aout
2E *46   803A  		ldc ':'
2F *47   FFFB  		aout
30 *48   881D  		ldc count
31 *49   2046  		add index2
32 *50   F100  		ldi
33 *51   FFFD  		dout
34 *52   800A  		ldc '\n'
35 *53   FFFB  		aout
36 *54   0046  		ld index2
37 *55   38B1  		sub alllet
38 *56   C03D  		jz stop1		;if so, ends program
39 *57   0046  		ld index2
3A *58   2042  		add one
3B *59   1046  		st index2
3C *60   9028  		ja stop
               
3D *61   FFFF  stop1:	halt
               		end start
               			
                                          ;data area
3E *62   0000  counter:		dw 0
3F *63   001A  max    :		dw 26
40 *64   001A  length :		dw 26
41 *65   0000  curr:   		dw 0
               ;curr1:   		dw 0
42 *66   0001  one:    		dw 1
43 *67   0000  OutputCounter: 	dw 0
44 *68   FFE0  conv:   		dw -32
45 *69   0000  index:  		dw 0
46 *70   0000  index2:  		dw 0
47 *71   0061  aconst: 		dw 'a'
48 *72   0041  Aconst: 		dw 'A'
49 *73   007A  zconst: 		dw 'z'
4A *74   0079  yconst: 		dw 'y'
4B *75   006E  nconst: 		dw 'n'
4C *76   0000  value : 		dw 0
4D *77   0000  inbuf:  		dw 2000 dup 0
81D*2077 0000  count : 		dw 26 dup 0 
837*2103 0069  msgl:   		dw "input a string "
838*2104 006E
839*2105 0070
83A*2106 0075
83B*2107 0074
83C*2108 0020
83D*2109 0061
83E*2110 0020
83F*2111 0073
840*2112 0074
841*2113 0072
842*2114 0069
843*2115 006E
844*2116 0067
845*2117 0020
846*2118 0000
847*2119 0049  msg2:   		dw "Input a string of characters. "
848*2120 006E
849*2121 0070
84A*2122 0075
84B*2123 0074
84C*2124 0020
84D*2125 0061
84E*2126 0020
84F*2127 0073
850*2128 0074
851*2129 0072
852*2130 0069
853*2131 006E
854*2132 0067
855*2133 0020
856*2134 006F
857*2135 0066
858*2136 0020
859*2137 0063
85A*2138 0068
85B*2139 0061
85C*2140 0072
85D*2141 0061
85E*2142 0063
85F*2143 0074
860*2144 0065
861*2145 0072
862*2146 0073
863*2147 002E
864*2148 0020
865*2149 0000
866*2150 0070  msg3:   		dw "press y to continue r n to quit "
867*2151 0072
868*2152 0065
869*2153 0073
86A*2154 0073
86B*2155 0020
86C*2156 0079
86D*2157 0020
86E*2158 0074
86F*2159 006F
870*2160 0020
871*2161 0063
872*2162 006F
873*2163 006E
874*2164 0074
875*2165 0069
876*2166 006E
877*2167 0075
878*2168 0065
879*2169 0020
87A*2170 0072
87B*2171 0020
87C*2172 006E
87D*2173 0020
87E*2174 0074
87F*2175 006F
880*2176 0020
881*2177 0071
882*2178 0075
883*2179 0069
884*2180 0074
885*2181 0020
886*2182 0000
887*2183 0054  outputmsg:  	dw "The count For "
888*2184 0068
889*2185 0065
88A*2186 0020
88B*2187 0063
88C*2188 006F
88D*2189 0075
88E*2190 006E
88F*2191 0074
890*2192 0020
891*2193 0046
892*2194 006F
893*2195 0072
894*2196 0020
895*2197 0000
               ;outputmsg1:  	dw " is =   "
               ;alphabet: 		dw 65
               ;clearalphabet: 	dw 65
896*2198 0000  zero :          dw 0
897*2199 0041  caps:			dw 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
898*2200 0042
899*2201 0043
89A*2202 0044
89B*2203 0045
89C*2204 0046
89D*2205 0047
89E*2206 0048
89F*2207 0049
8A0*2208 004A
8A1*2209 004B
8A2*2210 004C
8A3*2211 004D
8A4*2212 004E
8A5*2213 004F
8A6*2214 0050
8A7*2215 0051
8A8*2216 0052
8A9*2217 0053
8AA*2218 0054
8AB*2219 0055
8AC*2220 0056
8AD*2221 0057
8AE*2222 0058
8AF*2223 0059
8B0*2224 005A
8B1*2225 0019  alllet:			dw 25
8B2*2226 ========= end of bhargav-assignment.mas =================


         Symbol/Cross-Reference Table

Symbol                   Address     References
                          (hex)       (hex)

 start                     0           3E  E  
 loop1                     B           27 
 next                      19          11  15 
 stop                      28          6   3C 
 stop1                     3D          38 
 counter                   3E         
 max                       3F         
 length                    40         
 curr                      41          F   12  16  18  19 
 one                       42          14  20  25  3A 
 OutputCounter             43         
 conv                      44          17 
 index                     45          1   C   24  26 
 index2                    46          2B  31  36  39  3B 
 aconst                    47          10 
 Aconst                    48          1A 
 zconst                    49          13 
 yconst                    4A         
 nconst                    4B          5  
 value                     4C          1B  1D  1E  22 
 inbuf                     4D          9   B  
 count                     81D         1C  30 
 msgl                      837        
 msg2                      847         7  
 msg3                      866         2  
 outputmsg                 887         28 
 zero                      896         0  
 caps                      897         2A 
 alllet                    8B1         37 

Input file   = bhargav-assignment.mas
Output file  = bhargav-assignment.mac
List file    = bhargav-assignment.lst 
Number base  = decimal
Label status = case sensitive
